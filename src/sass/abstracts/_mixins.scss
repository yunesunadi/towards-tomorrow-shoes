@use "variables" as *;
@use "functions" as *;

@mixin media-query($value) {
    $size: null;
    @if type-of($value) == string {
        $size: validate-key($breakpoints, $value);
    } @else {
        $size: not-unitless($value);
    }
    @media (min-width: $size) {
        @content;
    }
}

@mixin pseudo(
    $element,
    $content: "",
    $position: absolute,
    $top: null,
    $right: null,
    $bottom: null,
    $left: null
) {
    @if $element == "before" or $element == "after" {
        position: relative;
        &::#{$element} {
            content: $content;
            position: $position;
            top: not-unitless-and-string($top);
            right: not-unitless-and-string($right);
            bottom: not-unitless-and-string($bottom);
            left: not-unitless-and-string($left);
            @content;
        }
    } @else {
        @error "Pseudo element must be 'before' or 'after'.";
    }
}

@mixin overlay {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: color("primary");
    transition: transform 0.3s ease-out;

    &.show {
        transform: translateX(0%);
    }
}

@mixin mobile-dropdown {
    max-height: 0;
    overflow: hidden;
    transition: all 0.3s ease-out;
}

@mixin desktop-dropdown {
    position: absolute;
    overflow: unset;
    opacity: 0;
    visibility: hidden;
    max-height: rem(150);
    border: rem(1) solid rgba(color("secondary"), 0.3);
    border-radius: rem(5);
    padding: rem(10);
}

@mixin dropdown-checkbox {
    .header-nav__checkbox:checked ~ & {
        max-height: rem(150);
    }
}

@mixin dropdown-hover {
    @include media-query("medium") {
        .header-nav__item:hover &,
        .header-nav__item:focus & {
            opacity: 1;
            visibility: visible;
        }
    }
}
