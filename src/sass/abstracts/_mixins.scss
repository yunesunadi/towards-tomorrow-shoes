@use "variables" as *;
@use "functions" as *;

@mixin media-query($value) {
    $size: null;
    @if type-of($value) == string {
        $size: validate-key($breakpoints, $value);
    } @else {
        $size: not-unitless($value);
    }
    @media (min-width: $size) {
        @content;
    }
}

@mixin pseudo(
    $element,
    $content: "",
    $position: absolute,
    $top: null,
    $right: null,
    $bottom: null,
    $left: null
) {
    @if $element == "before" or $element == "after" {
        position: relative;
        &::#{$element} {
            content: $content;
            position: $position;
            top: not-unitless-and-string($top);
            right: not-unitless-and-string($right);
            bottom: not-unitless-and-string($bottom);
            left: not-unitless-and-string($left);
            @content;
        }
    } @else {
        @error "Pseudo element must be 'before' or 'after'.";
    }
}

@mixin overlay {
    position: fixed;
    z-index: 10;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: color("primary");
    transform: translateX(-100%);
    transition: transform 0.3s ease-out;

    &.show {
        transform: translateX(0%);
    }
}

@mixin mobile-dropdown {
    max-height: 0;
    overflow: hidden;
    transition: all 0.3s ease-out;
}

@mixin desktop-dropdown {
    position: absolute;
    z-index: 2;
    overflow: unset;
    opacity: 0;
    visibility: hidden;
    max-height: rem(150);
    border: rem(1) solid rgba(color("secondary"), 0.3);
    background-color: color("primary");
    border-radius: rem(5);
    padding: rem(10);
    margin-top: rem(5);
}

@mixin dropdown-checkbox($parent) {
    #{$parent}__checkbox:checked ~ & {
        max-height: rem(150);
    }
}

@mixin dropdown-caret($parent) {
    &:checked + div #{$parent}__caret {
        transform: rotate(180deg);
    }
}

@mixin dropdown-hover {
    @include media-query("medium") {
        .nav__item:hover &,
        .nav__item:focus & {
            opacity: 1;
            visibility: visible;
        }
    }
}

@mixin carousel-hover {
    color: rgba(color("light-grey"), 0.6);

    &:hover,
    &:focus {
        color: color("primary");
    }
}

@mixin section {
    padding: rem(20) 0;

    @include media-query("medium") {
        padding: rem(25) 0;
    }
}

@mixin section-title {
    font-size: rem(18);
    margin-bottom: rem(15);

    @include media-query("medium") {
        font-size: rem(20);
    }
}

@mixin placeholder-box($width) {
    background-color: color("light-grey");
    width: $width;
    height: rem(20);
}

@mixin scrollbar {
    scrollbar-width: thin;
    scrollbar-color: color("light-grey") color("primary");

    &::-webkit-scrollbar-thumb {
        background-color: color("light-grey");
        border-radius: rem(30);
    }
}

@mixin product {
    &__item-link {
        color: color("secondary");

        &:hover,
        &:focus {
            text-decoration: underline;
        }
    }

    &__img {
        width: 100%;
        height: rem(270);
    }

    &__wishlist {
        cursor: default;
        position: absolute;
        top: rem(12);
        right: rem(12);
        font-size: rem(18);
    }

    &__info {
        display: flex;
        justify-content: space-between;
        padding: rem(5) rem(8) rem(20);
    }
}

@mixin placeholder-product {
    .name-placeholder {
        @include placeholder-box(rem(150));
        margin-bottom: rem(3);

        @include media-query("medium") {
            @include placeholder-box(rem(170));
            margin-bottom: rem(8);
        }
    }

    .price-placeholder {
        @include placeholder-box(rem(60));
    }

    .category-placeholder {
        @include placeholder-box(rem(180));

        @include media-query("medium") {
            @include placeholder-box(rem(200));
        }
    }
}
